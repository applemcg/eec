
define ( factorial,
    docstring(
        returns the factorial of a
	non-negative integer argument
    )
    take( n),
    return( 
 	 if( 1st less than 2nd (n, 2), 1,
	     multiply( n,
     	       factorial( subtract 2nd from 1st ( n, 1))
             )
          )
     )
)
define ( append space,
	  take( msg),
	  return( concatenate( msg, \ ))
)
define  ( as, take( m), return( append space( m)))

print  (  as( factorial of), as( str( n)), factorial( n))


