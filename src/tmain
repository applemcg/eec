#!/usr/bin/env python

import os
import sys

def f_stderr(msg):
    sys.stderr.write( msg + '\n')

import datastructure
import machine
import parser

# https://docs.python.org/2/library/fileinput.html#module-fileinput
import fileinput 

# print dir(machine)
# print dir(parser)
# print 'datastructure: ', dir(datastructure)

# print "="*52
# print parser.cummings
# print parser.handler


def bigLine( msg, n):

    l = len(msg)
    f = (n - (l+2))/2
    b = "="*f
    f_stderr(  b + " " +  msg + " " + b)

def tokenizer(line):

    empty  = ' \t\n'
    escape = '\\'
    state  = ''
    open   = '('
    close  = ')'
    separ  = ','

    stream = []

    collect = ''
    for c in line:
        
        if state == 'escape':
            collect += c
            state = ''
            continue
            
        if c in empty and not collect:
            continue
                
        if c == escape:
            state = 'escape'
            continue
                    
        if c == open or c == close or c == separ:

            stream.append( collect)
            stream.append( c)
            collect = ''

        else:
            collect += c

    return stream


def inputStream():
    tokens = []
    for line in fileinput.input():
        tokens.append( tokenizer(line))

    return sum(tokens, [])


def framer( name, parent, *args):

    c = machine.Frame(name, parent)

    for a in args:
        c.insertArg(a)
        
    bigLine('Frame of C', 80)
    # print str(c)

    bigLine('Evaluate C', 80)

    c.evaluate()

def main (thisFrame):

    framer( 'comment', thisFrame, 'this is a comment', 'this is another')
    framer( 'print', thisFrame, 'Hello World!')


# main( machine.Frame('interpreter', None))

print inputStream() 
